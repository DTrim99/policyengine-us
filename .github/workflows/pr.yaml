name: Pull request
on:
  pull_request:
    branches: [master]
jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check formatting
        uses: "lgeiger/black-action@master"
        with:
          args: ". -l 79 --check"
  check-version:
    name: Check version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 100
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - name: Install dependencies
        run: uv pip install -e ".[dev]" --system
      - name: Install dependencies
        run: uv pip install "yaml-changelog>=0.1.7" --system
      - name: Build changelog
        run: make changelog
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 10  # Need full history for git diff
      - name: Fetch base branch
        run: |
          git fetch origin ${{ github.base_ref }}:refs/remotes/origin/${{ github.base_ref }}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Install dependencies
        run: uv sync --dev
      - name: Turn off default branching
        shell: bash
        run: ./update_itemization.sh
      - name: Run selective tests (or all tests for memory fix PR)
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_BASE_REF: ${{ github.base_ref }}
        run: |
          # Temporarily run all tests for memory fix PR to verify the fix works
          if [[ "${{ github.head_ref }}" == "fix/memory-test-issues" ]]; then
            echo "Running ALL tests for memory fix PR verification..."
            echo "Installing psutil for memory monitoring..."
            uv pip install psutil --system
            echo "Testing contrib tests with isolation (cleanup after each test)..."
            uv run python scripts/test_contrib_isolated.py --timeout-minutes 10
            echo "Testing baseline tests with batched execution (cleanup every 50 tests)..."
            uv run python scripts/test_baseline_batched.py --batch-size 50
            echo "Testing other Python tests..."
            uv run pytest policyengine_us/tests/ --maxfail=0
          else
            uv run python policyengine_us/tests/run_selective_tests.py --verbose --debug
          fi
      - name: Build package
        run: uv build